# R manifest example

loader.preload = "file:{{ graphene.libos }}"
libos.entrypoint = "{{ r_exec }}"
loader.log_level = "{{ log_level }}"

loader.env.LD_LIBRARY_PATH = "{{ r_home }}/lib:/lib:{{ arch_libdir }}:/usr/lib:/usr/{{ arch_libdir }}"
loader.env.PATH = "{{ r_home }}/bin:/usr/bin:/bin"
loader.env.USERNAME = ""
loader.env.HOME = ""
loader.env.PWD = ""
loader.env.R_ARCH = ""
loader.env.R_HOME = "{{ r_home }}"

loader.insecure__use_cmdline_argv = true

sys.enable_sigterm_injection = true

fs.mount.lib.type = "chroot"
fs.mount.lib.path = "/lib"
fs.mount.lib.uri = "file:{{ graphene.runtimedir() }}"

fs.mount.lib2.type = "chroot"
fs.mount.lib2.path = "{{ arch_libdir }}"
fs.mount.lib2.uri = "file:{{ arch_libdir }}"

fs.mount.usr.type = "chroot"
fs.mount.usr.path = "/usr"
fs.mount.usr.uri = "file:/usr"

fs.mount.r_home.type = "chroot"
fs.mount.r_home.path = "{{ r_home }}"
fs.mount.r_home.uri = "file:{{ r_home }}"

fs.mount.tmp.type = "chroot"
fs.mount.tmp.path = "/tmp"
fs.mount.tmp.uri = "file:/tmp"

fs.mount.bin.type = "chroot"
fs.mount.bin.path = "/bin"
fs.mount.bin.uri = "file:/bin"

sgx.nonpie_binary = true
sys.stack.size = "8M"
sgx.enclave_size = "1G"
sgx.thread_num = 4

sgx.trusted_files.r = "file:{{ r_exec }}"
sgx.trusted_files.runtime = "file:{{ graphene.runtimedir() }}/"
sgx.trusted_files.arch_libdir = "file:{{ arch_libdir }}/"
sgx.trusted_files.usr_arch_libdir = "file:/usr/{{ arch_libdir }}/"
sgx.trusted_files.stats_lib = "file:{{ r_home }}/"
sgx.trusted_files.scripts = "file:scripts/"

# R uses shell to delete files, so we need to allow /bin/sh and /bin/rm to be accessed.
# strace snippet: execve("/bin/sh", ["sh", "-c", "rm -rf /tmp/RtmpEiedDF"], [/* 41 vars */])
sgx.trusted_files.rm = "file:/bin/rm"
sgx.trusted_files.sh = "file:/bin/sh"

sgx.allowed_files.tmp = "file:/tmp"
