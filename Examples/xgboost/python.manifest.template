# Python3 manifest example
#
# Python must be run with the pal_loader:
#
# ./pal_loader python.manifest <script>

# The executable to load in Graphene. By default, PYTHONHOME points to the
# system installation. To run Python from a local installation, specify PYTHONHOME
# when running `make` in this directory.
loader.exec = file:$(PYTHONEXEC)

# Graphene environment, including the path of the library OS and the debug
# option (inline/none).
loader.preload = file:$(GRAPHENEDIR)/Runtime/libsysdb.so
loader.debug_type = $(GRAPHENEDEBUG)

# Read application arguments directly from the command line. Don't use this on production!
loader.insecure__use_cmdline_argv = 1

# Environment variables for Python
loader.env.LD_LIBRARY_PATH = $(CONDAPATH)/lib/$(PYTHONVERSION)/site-packages/xgboost/lib/:$(PYTHONHOME)/lib:$(CONDAPATH)/lib/:/lib:$(ARCH_LIBDIR):/usr/lib:/usr/$(ARCH_LIBDIR):
loader.env.PATH = $(PYTHONHOME)/bin:/usr/bin:/bin
loader.env.PYTHONHOME = $(PYTHONHOME)
loader.env.PYTHONPATH = $(PYTHONHOME):$(PYTHONHOME)/plat-$(ARCH_LONG):$(PYTHONDISTHOME):$(PYTHONHOME)/lib-dynload

# Mounted FSes. The following "chroot" FSes mount a part of the host FS into the
# guest. Other parts of the host FS will not be available in the guest.

# Default glibc files, mounted from the Runtime directory in GRAPHENEDIR.
fs.mount.lib.type = chroot
fs.mount.lib.path = /lib
fs.mount.lib.uri = file:$(GRAPHENEDIR)/Runtime

# Host-level libraries (e.g., /lib/x86_64-linux-gnu) required by the Python executable
fs.mount.lib2.type = chroot
fs.mount.lib2.path = $(ARCH_LIBDIR)
fs.mount.lib2.uri = file:$(ARCH_LIBDIR)

fs.mount.lib3.type = chroot
fs.mount.lib3.path = $(CONDAPATH)/lib
fs.mount.lib3.uri = file:$(CONDAPATH)/lib

# Host-level directory (/usr) required by the Python executable
fs.mount.usr.type = chroot
fs.mount.usr.path = /usr
fs.mount.usr.uri = file:/usr

# Mount $PYTHONHOME
fs.mount.pyhome.type = chroot
fs.mount.pyhome.path = $(PYTHONHOME)
fs.mount.pyhome.uri = file:$(PYTHONHOME)

# Mount $PYTHONDISTHOME
fs.mount.pydisthome.type = chroot
fs.mount.pydisthome.path = $(PYTHONDISTHOME)
fs.mount.pydisthome.uri = file:$(PYTHONDISTHOME)

# Mount /tmp
fs.mount.tmp.type = chroot
fs.mount.tmp.path = /tmp
fs.mount.tmp.uri = file:/tmp

# Mount /etc
fs.mount.etc.type = chroot
fs.mount.etc.path = /etc
fs.mount.etc.uri = file:/etc

# SGX general options

# Set the virtual memory size of the SGX enclave. For SGX v1, the enclave
# size must be specified during signing. If Python needs more virtual memory
# than the enclave size, Graphene will not be able to allocate it.
sgx.enclave_size = 4G

# Set the maximum number of enclave threads. For SGX v1, the number of enclave
# TCSes must be specified during signing, so the application cannot use more
# threads than the number of TCSes. Note that Graphene also creates an internal
# thread for handling inter-process communication (IPC), and potentially another
# thread for asynchronous events. Therefore, the actual number of threads that
# the application can create is (sgx.thread_num - 2).
sgx.thread_num = 32

# SGX trusted libraries

# Glibc libraries
sgx.trusted_files.ld = file:$(GRAPHENEDIR)/Runtime/ld-linux-x86-64.so.2
sgx.trusted_files.libc = file:$(GRAPHENEDIR)/Runtime/libc.so.6
sgx.trusted_files.libm = file:$(GRAPHENEDIR)/Runtime/libm.so.6
sgx.trusted_files.libdl = file:$(GRAPHENEDIR)/Runtime/libdl.so.2
sgx.trusted_files.librt = file:$(GRAPHENEDIR)/Runtime/librt.so.1
sgx.trusted_files.libutil = file:$(GRAPHENEDIR)/Runtime/libutil.so.1
sgx.trusted_files.libpthread = file:$(GRAPHENEDIR)/Runtime/libpthread.so.0
sgx.trusted_files.libnssdns = file:$(GRAPHENEDIR)/Runtime/libnss_dns.so.2
sgx.trusted_files.libresolve = file:$(GRAPHENEDIR)/Runtime/libresolv.so.2

# Other libraries
sgx.trusted_files.libexpat = file:$(ARCH_LIBDIR)/libexpat.so.1
sgx.trusted_files.libnssfiles = file:$(ARCH_LIBDIR)/libnss_files.so.2
sgx.trusted_files.libnssmdns4 = file:$(ARCH_LIBDIR)/libnss_mdns4_minimal.so.2
$(PYTHON_TRUSTED_LIBS)

sgx.trusted_files.xgboost = file:$(CONDAPATH)/lib/$(PYTHONVERSION)/site-packages/xgboost/lib/libxgboost.so
sgx.trusted_files.python01 = file:$(PYTHONHOME)/io.py
sgx.trusted_files.python02 = file:$(PYTHONHOME)/encodings/__init__.py
sgx.trusted_files.python03 = file:$(PYTHONHOME)/abc.py
sgx.trusted_files.python04 = file:$(PYTHONHOME)/codecs.py
sgx.trusted_files.python05 = file:$(PYTHONHOME)/_weakrefset.py
sgx.trusted_files.python06 = file:$(PYTHONHOME)/encodings/aliases.py
sgx.trusted_files.python07 = file:$(PYTHONHOME)/encodings/ascii.py
sgx.trusted_files.python08 = file:$(PYTHONHOME)/encodings/utf_8.py
sgx.trusted_files.python09 = file:$(PYTHONHOME)/encodings/latin_1.py
sgx.trusted_files.python10 = file:$(PYTHONHOME)/_bootlocale.py
sgx.trusted_files.python11 = file:$(PYTHONHOME)/site.py
sgx.trusted_files.python12 = file:$(PYTHONHOME)/os.py
sgx.trusted_files.python13 = file:$(PYTHONHOME)/stat.py
sgx.trusted_files.python14 = file:$(PYTHONHOME)/posixpath.py
sgx.trusted_files.python15 = file:$(PYTHONHOME)/genericpath.py
sgx.trusted_files.python16 = file:$(PYTHONHOME)/_collections_abc.py
sgx.trusted_files.python17 = file:$(PYTHONHOME)/_sitebuiltins.py
sgx.trusted_files.python18 = file:$(PYTHONHOME)/sysconfig.py
sgx.trusted_files.python19 = file:/usr/lib/$(PYTHONVERSION)/sitecustomize.py
sgx.trusted_files.python20 = file:/usr/lib/python3/dist-packages/apport_python_hook.py
$(PYTHON_TRUSTED_SCRIPTS)

# User scripts
sgx.trusted_files.user01 = file:$(CONDAPATH)/lib/$(PYTHONVERSION)/lib-dynload/_posixsubprocess.cpython-36m-x86_64-linux-gnu.so
sgx.trusted_files.user02 = file:xgboost_example_airline.py
sgx.trusted_files.user03 = file:$(CONDAPATH)/lib/$(PYTHONVERSION)/lib-dynload/select.cpython-36m-x86_64-linux-gnu.so
sgx.trusted_files.user04 = file:$(CONDAPATH)/lib/$(PYTHONVERSION)/lib-dynload/math.cpython-36m-x86_64-linux-gnu.so
sgx.trusted_files.user05 = file:$(CONDAPATH)/lib/$(PYTHONVERSION)/hashlib.py
sgx.trusted_files.user06 = file:$(CONDAPATH)/lib/$(PYTHONVERSION)/lib-dynload/_heapq.cpython-36m-x86_64-linux-gnu.so
sgx.trusted_files.user07 = file:$(CONDAPATH)/lib/$(PYTHONVERSION)/lib-dynload/zlib.cpython-36m-x86_64-linux-gnu.so
sgx.trusted_files.user08 = file:$(CONDAPATH)/lib/$(PYTHONVERSION)/lib-dynload/grp.cpython-36m-x86_64-linux-gnu.so
sgx.trusted_files.user09 = file:$(CONDAPATH)/lib/$(PYTHONVERSION)/lib-dynload/_blake2.cpython-36m-x86_64-linux-gnu.so
sgx.trusted_files.user10 = file:$(CONDAPATH)/lib/$(PYTHONVERSION)/lib-dynload/_sha3.cpython-36m-x86_64-linux-gnu.so
sgx.trusted_files.user11 = file:$(CONDAPATH)/lib/$(PYTHONVERSION)/lib-dynload/_bisect.cpython-36m-x86_64-linux-gnu.so
sgx.trusted_files.user12 = file:$(CONDAPATH)/lib/$(PYTHONVERSION)/lib-dynload/_random.cpython-36m-x86_64-linux-gnu.so
sgx.trusted_files.user13 = file:/usr/lib/x86_64-linux-gnu/libssl.so.1.1
sgx.trusted_files.user14 = file:$(CONDAPATH)/lib/libffi.so.7
sgx.trusted_files.user15 = file:/usr/lib/x86_64-linux-gnu/libffi.so.7
sgx.trusted_files.user16 = file:$(CONDAPATH)/lib/$(PYTHONVERSION)/site-packages/scipy.libs/libopenblasp-r0-085ca80a.3.9.so
sgx.trusted_files.user17 = file:$(CONDAPATH)/lib/libgcc_s.so.1
sgx.trusted_files.user18 = file:$(CONDAPATH)/lib/libgcc_s.so.1
sgx.trusted_files.user19 = file:$(CONDAPATH)/lib/libz.so.1
sgx.trusted_files.user20 = file:$(CONDAPATH)/lib/libstdc++.so.6

sgx.trusted_files.dataset05 = file:data/iris_test.csv
sgx.trusted_files.dataset06 = file:data/iris_train.csv

sgx.trusted_files.ffi = file:/usr/lib/x86_64-linux-gnu/libffi.so.6
sgx.trusted_files.lzma1 = file:/lib/x86_64-linux-gnu/liblzma.so.5
sgx.trusted_files.libz1 = file:/lib/x86_64-linux-gnu/libz.so.1
sgx.trusted_files.cpp = file:/usr/lib/x86_64-linux-gnu/libstdc++.so.6
sgx.trusted_files.gcc = file:/lib/x86_64-linux-gnu/libgcc_s.so.1
sgx.trusted_files.OpenMP = file:$(CONDAPATH)/lib/libgomp.so.1
sgx.trusted_files.crypto = file:/usr/lib/x86_64-linux-gnu/libcrypto.so.1.1
sgx.trusted_files.crypto2 = file:$(CONDAPATH)/lib/libcrypto.so.1.1
sgx.trusted_files.fstab = file:/etc/fstab

sgx.allowed_files.scripts = file:scripts
sgx.allowed_files.pythonpackages1 = file:$(CONDAPATH)/lib/$(PYTHONVERSION)/lib-dynload/
sgx.allowed_files.pythonpackages2 = file:$(CONDAPATH)/lib/$(PYTHONVERSION)/site-packages/
sgx.allowed_files.pythonhome = file:$(PYTHONHOME)

# Python-required etc files
sgx.trusted_files.mimetypes = file:/etc/mime.types
sgx.trusted_files.defapport = file:/etc/default/apport

# Name Service Switch (NSS) and getaddrinfo(3) configuration files
sgx.allowed_files.nsswitch  = file:/etc/nsswitch.conf
sgx.allowed_files.ethers    = file:/etc/ethers
sgx.allowed_files.hosts     = file:/etc/hosts
sgx.allowed_files.group     = file:/etc/group
sgx.allowed_files.passwd    = file:/etc/passwd
sgx.allowed_files.gaiconf   = file:/etc/gai.conf
sgx.allowed_files.hostconf  = file:/etc/host.conf
sgx.allowed_files.resolv    = file:/etc/resolv.conf
