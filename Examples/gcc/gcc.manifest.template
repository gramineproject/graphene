loader.preload = "file:{{ graphene.libos }}"
loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}:/usr/lib:/usr/{{ arch_libdir }}"
loader.env.PATH = "/bin:/usr/bin"
loader.log_level = "{{ log_level }}"
libos.entrypoint = "file:/usr/bin/gcc"

# Read application arguments directly from the command line. Don't use this on production!
loader.insecure__use_cmdline_argv = 1

fs.mount.lib1.type = "chroot"
fs.mount.lib1.path = "/lib"
fs.mount.lib1.uri = "file:{{ graphene.runtimedir() }}"

fs.mount.lib2.type = "chroot"
fs.mount.lib2.path = "{{ arch_libdir }}"
fs.mount.lib2.uri = "file:{{ arch_libdir }}"

fs.mount.usr.type = "chroot"
fs.mount.usr.path = "/usr"
fs.mount.usr.uri = "file:/usr"

fs.mount.tmp.type = "chroot"
fs.mount.tmp.path = "/tmp"
fs.mount.tmp.uri = "file:/tmp"

sgx.enclave_size = "1G"
sgx.nonpie_binary = 1

sgx.trusted_files.gcc = "file:/usr/bin/gcc"
sgx.trusted_files.as = "file:/usr/bin/as"
sgx.trusted_files.ld_ = "file:/usr/bin/ld"

sgx.trusted_files.runtime = "file:{{ graphene.runtimedir() }}"
sgx.trusted_files.arch_libdir = "file:{{ arch_libdir }}/"
sgx.trusted_files.usr_arch_libdir = "file:/usr/{{ arch_libdir }}/"
sgx.trusted_files.gcc_data = "file:{{ gcc_lib_path }}/{{ gcc_major_version }}/"
sgx.trusted_files.hostdebug = "file:/usr/lib/debug/usr/{{ arch_libdir }}"

sgx.allowed_files.tmp = "file:/tmp"
sgx.allowed_files.test_files = "file:test_files"
sgx.allowed_files.aout = "file:a.out"

sgx.allowed_files.inc = "file:/usr/include"
