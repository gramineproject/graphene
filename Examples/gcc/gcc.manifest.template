loader.preload = "file:$(GRAPHENEDIR)/Runtime/libsysdb.so"
loader.env.LD_LIBRARY_PATH = "/lib:$(ARCH_LIBDIR):/usr/lib:/usr/$(ARCH_LIBDIR)"
loader.env.PATH = "/bin:/usr/bin"
loader.debug_type = "$(GRAPHENEDEBUG)"
libos.entrypoint = "file:/usr/bin/gcc"

# Read application arguments directly from the command line. Don't use this on production!
loader.insecure__use_cmdline_argv = 1

fs.mount.lib1.type = "chroot"
fs.mount.lib1.path = "/lib"
fs.mount.lib1.uri = "file:$(GRAPHENEDIR)/Runtime"

fs.mount.lib2.type = "chroot"
fs.mount.lib2.path = "$(ARCH_LIBDIR)"
fs.mount.lib2.uri = "file:$(ARCH_LIBDIR)"

fs.mount.usr.type = "chroot"
fs.mount.usr.path = "/usr"
fs.mount.usr.uri = "file:/usr"

fs.mount.tmp.type = "chroot"
fs.mount.tmp.path = "/tmp"
fs.mount.tmp.uri = "file:/tmp"

sgx.enclave_size = "1G"
sgx.nonpie_binary = 1

sgx.trusted_files.ld = "file:$(GRAPHENEDIR)/Runtime/ld-linux-x86-64.so.2"
sgx.trusted_files.libc = "file:$(GRAPHENEDIR)/Runtime/libc.so.6"
sgx.trusted_files.libdl = "file:$(GRAPHENEDIR)/Runtime/libdl.so.2"
sgx.trusted_files.libm = "file:$(GRAPHENEDIR)/Runtime/libm.so.6"
sgx.trusted_files.libpthread = "file:$(GRAPHENEDIR)/Runtime/libpthread.so.0"
sgx.trusted_files.libbfd = "file:/usr/$(ARCH_LIBDIR)/libbfd-$(BINUTILS_VERSION)-system.so"

sgx.trusted_files.liblto = "file:$(GCC_LIB_PATH)/$(GCC_MAJOR_VERSION)/liblto_plugin.so"
sgx.trusted_files.libgcc = "file:$(GCC_LIB_PATH)/$(GCC_MAJOR_VERSION)/libgcc_s.so"
sgx.trusted_files.libgcca = "file:$(GCC_LIB_PATH)/$(GCC_MAJOR_VERSION)/libgcc.a"
sgx.trusted_files.crtend = "file:$(GCC_LIB_PATH)/$(GCC_MAJOR_VERSION)/crtend.o"
sgx.trusted_files.crtbegin = "file:$(GCC_LIB_PATH)/$(GCC_MAJOR_VERSION)/crtbegin.o"

sgx.trusted_files.gcc = "file:/usr/bin/gcc"
sgx.trusted_files.cc1 = "file:$(GCC_LIB_PATH)/$(GCC_MAJOR_VERSION)/cc1"
sgx.trusted_files.collect2 = "file:$(GCC_LIB_PATH)/$(GCC_MAJOR_VERSION)/collect2"
sgx.trusted_files.as = "file:/usr/bin/as"
sgx.trusted_files.ld_ = "file:/usr/bin/ld"

sgx.allowed_files.tmp = "file:/tmp"
sgx.allowed_files.test_files = "file:test_files"
sgx.allowed_files.aout = "file:a.out"

sgx.allowed_files.hostdebug = "file:/usr/lib/debug/usr/$(ARCH_LIBDIR)"
sgx.allowed_files.hostusrlib = "file:/usr/$(ARCH_LIBDIR)"
sgx.allowed_files.hostlib = "file:$(ARCH_LIBDIR)"
$(LD_TRUSTED_FILES)
