stage('build') {
    sh '''
        cd Pal/src/host/Linux-SGX/signer/ && openssl genrsa -3 -out enclave-key.pem 3072

        cd /opt/intel
        git clone https://github.com/intel/linux-sgx-driver.git
        cd linux-sgx-driver
        git checkout 276c5c6a064d22358542f5e0aa96b1c0ace5d695
    '''

    sh '''
        cd /opt/intel
        git clone https://github.com/intel/SGXDataCenterAttestationPrimitives.git
        cd SGXDataCenterAttestationPrimitives
        git checkout DCAP_1.6
        # no need to build, we only need the SGX header file (sgx_oot.h)
        # test the build with the DCAP driver v1.6 and clean up afterwards

        cd "$WORKSPACE"
        make ${MAKEOPTS} ISGX_DRIVER_PATH=/opt/intel/SGXDataCenterAttestationPrimitives/driver/linux
        make ${MAKEOPTS} clean
    '''

    sh '''
        make ${MAKEOPTS} ISGX_DRIVER_PATH=/opt/intel/linux-sgx-driver
    '''

    try {
        sh '''
            meson setup build \
                --prefix="$PREFIX" \
                -Ddirect=disabled \
                -Dsgx=enabled
            ninja -C build
            ninja -C build install
        '''
    } finally {
        archiveArtifacts 'build/meson-logs/**/*'
    }

    env.GRAPHENE_PKGLIBDIR = sh(returnStdout: true, script: '''
    meson introspect build --buildoptions \
    | jq -r '(map(select(.name == "prefix")) + map(select(.name == "libdir"))) | map(.value) | join("/")'
    ''').trim() + '/graphene'

    sh 'rm -rf build'

    // prevent cheating and testing from repo
    sh 'make ${MAKEOPTS} -C Runtime clean'
}
