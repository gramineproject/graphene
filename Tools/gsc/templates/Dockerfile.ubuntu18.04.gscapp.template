# Integrate Graphene into the app image
# This file is used in a multistage docker build process, in which the previous image is named "graphene"
FROM ${appImage}

# Update any packages
RUN apt-get update \
    && env DEBIAN_FRONTEND=noninteractive apt-get install -y \
        python3 \
        python3-protobuf \
        libprotobuf-c-dev \
        binutils \
        openssl

# Copy Graphene runtime and signer tools to /graphene
RUN mkdir -p /graphene \
    && mkdir -p /graphene/Runtime \
    && mkdir -p /graphene/signer \
    && mkdir -p /graphene/Pal/src
COPY --from=graphene /graphene/Runtime/ /graphene/Runtime
COPY --from=graphene /graphene/Pal/src/host/Linux-SGX/signer/ /graphene/signer
COPY --from=graphene /graphene/Pal/src/host/Linux-SGX/generated_offsets.py /graphene/signer/

# Copy template scripts and manifests
COPY apploader.sh ./
COPY *.manifest ./
COPY finalize_manifests.py /

# Mark apploader.sh executable, finalize manifests, and remove intermediate scripts
RUN chmod u+x apploader.sh \
    && python3 /finalize_manifests.py / ${binary}.manifest ${user_manifests} \
    && rm -f /finalize_manifests.py

# Define default command
ENTRYPOINT  ["/bin/sh", "./apploader.sh"]
CMD [${cmd}]
