loader.preload = "file:{{ graphene.libos }}"
libos.entrypoint = "{{ entrypoint }}"
loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}:/usr/lib:/usr/lib64"
loader.env.PATH = "/bin:/usr/bin:."
loader.env.LD_PRELOAD = "{{ coreutils_libdir }}/libstdbuf.so"
loader.env._STDBUF_O = "L"
loader.insecure__use_cmdline_argv = true

fs.mount.shm.type = "chroot"
fs.mount.shm.path = "/dev/shm"
fs.mount.shm.uri = "file:/tmp"

fs.mount.lib.type = "chroot"
fs.mount.lib.path = "/lib"
fs.mount.lib.uri = "file:{{ graphene.runtimedir() }}"

fs.mount.lib64.type = "chroot"
fs.mount.lib64.path = "{{ arch_libdir }}"
fs.mount.lib64.uri = "file:{{ arch_libdir }}"

fs.mount.usr.type = "chroot"
fs.mount.usr.path = "/usr"
fs.mount.usr.uri = "file:/usr"

fs.mount.tmp.type = "chroot"
fs.mount.tmp.path = "/tmp"
fs.mount.tmp.uri = "file:/tmp"

sys.brk.max_size = "32M"
sys.stack.size = "4M"
sgx.nonpie_binary = true

sgx.allowed_files = [
  "file:/tmp",
]

sgx.trusted_files = [
  "file:{{ entrypoint }}",
  "file:{{ graphene.runtimedir() }}/ld-linux-x86-64.so.2",
  "file:{{ graphene.runtimedir() }}/libc.so.6",
  "file:{{ graphene.runtimedir() }}/libdl.so.2",
  "file:{{ graphene.runtimedir() }}/libm.so.6",
  "file:{{ graphene.runtimedir() }}/libpthread.so.0",
  "file:{{ graphene.runtimedir() }}/librt.so.1",
  "file:{{ coreutils_libdir }}/libstdbuf.so",
]
