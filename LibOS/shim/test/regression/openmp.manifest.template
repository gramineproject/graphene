loader.preload = "file:{{ graphene.libos }}"
libos.entrypoint = "file:openmp"
loader.argv0_override = "openmp"

# Graphene optionally provides patched OpenMP runtime library that runs faster inside SGX enclaves
# (execute `make -C LibOS gcc` to generate it). This library will replace the native one because
# Graphene's Runtime path has priority in LD_LIBRARY_PATH.

loader.env.LD_LIBRARY_PATH = "/lib:/usrlib"

# the manifest options below are added only for testing, they have no significance for OpenMP
libos.check_invalid_pointers = 0
sys.enable_sigterm_injection = 1
sgx.preheat_enclave = 1

fs.mount.lib.type = "chroot"
fs.mount.lib.path = "/lib"
fs.mount.lib.uri = "file:{{ graphene.runtimedir() }}"

fs.mount.bin.type = "chroot"
fs.mount.bin.path = "/bin"
fs.mount.bin.uri = "file:/bin"

fs.mount.usrlib.type = "chroot"
fs.mount.usrlib.path = "/usrlib"
fs.mount.usrlib.uri = "file:/usr/{{ arch_libdir }}"

sgx.thread_num = 32

sgx.trusted_files.runtime = "file:{{ graphene.runtimedir() }}/"
sgx.trusted_files.openmp = "file:openmp"

sgx.trusted_files.libgomp_native = "file:/usr{{ arch_libdir }}/libgomp.so.1"

sgx.nonpie_binary = 1
