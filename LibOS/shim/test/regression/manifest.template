loader.preload = "file:../../src/libsysdb.so"
loader.env.LD_LIBRARY_PATH = "/lib:$(ARCH_LIBDIR):/usr/$(ARCH_LIBDIR)"
loader.debug_type = "none"
loader.insecure__use_cmdline_argv = 1

fs.mount.graphene_lib.type = "chroot"
fs.mount.graphene_lib.path = "/lib"
fs.mount.graphene_lib.uri = "file:../../../../Runtime"

fs.mount.host_lib.type = "chroot"
fs.mount.host_lib.path = "$(ARCH_LIBDIR)"
fs.mount.host_lib.uri = "file:$(ARCH_LIBDIR)"

fs.mount.host_usr_lib.type = "chroot"
fs.mount.host_usr_lib.path = "/usr/$(ARCH_LIBDIR)"
fs.mount.host_usr_lib.uri = "file:/usr/$(ARCH_LIBDIR)"

fs.mount.bin.type = "chroot"
fs.mount.bin.path = "/bin"
fs.mount.bin.uri = "file:/bin"

fs.mount.devkmsg.type = "chroot"
fs.mount.devkmsg.path = "/dev/kmsg"
fs.mount.devkmsg.uri = "dev:/dev/kmsg"

sgx.trusted_files.ld = "file:../../../../Runtime/ld-linux-x86-64.so.2"
sgx.trusted_files.libc = "file:../../../../Runtime/libc.so.6"
sgx.trusted_files.libdl = "file:../../../../Runtime/libdl.so.2"
sgx.trusted_files.libm = "file:../../../../Runtime/libm.so.6"
sgx.trusted_files.libpthread = "file:../../../../Runtime/libpthread.so.0"
sgx.trusted_files.libgcc_s = "file:$(ARCH_LIBDIR)/libgcc_s.so.1"
sgx.trusted_files.libstdcxx = "file:/usr$(ARCH_LIBDIR)/libstdc++.so.6"

sgx.trusted_files.victim = "file:exec_victim"
sgx.trusted_children.victim = "file:exec_victim.sig"

sgx.allowed_files.tmp_dir = "file:tmp/"

# Set this value to at least 4 (1 for the main thread, 2 for Graphene internal threads and 1 for
# helper threads some tests use)
sgx.thread_num = 8

sgx.static_address = 1
