--- a/sysdeps/unix/sysv/linux/x86_64/time.c	2014-02-07 01:04:38.000000000 -0800
+++ b/sysdeps/unix/sysv/linux/x86_64/time.c	2018-11-06 01:42:24.778973490 -0800
@@ -24,7 +24,14 @@
 
 #include <dl-vdso.h>
 
-#define VSYSCALL_ADDR_vtime	0xffffffffff600400
+# include <sysdep.h>
+
+time_t
+__inline_time (time_t *t)
+{
+  INTERNAL_SYSCALL_DECL (err);
+  return INTERNAL_SYSCALL (time, err, 1, t);
+}
 
 /* Avoid DWARF definition DIE on ifunc symbol so that GDB can handle
    ifunc symbol properly.  */
@@ -37,7 +44,7 @@ time_ifunc (void)
   PREPARE_VERSION (linux26, "LINUX_2.6", 61765110);
 
   /* If the vDSO is not available we fall back on the old vsyscall.  */
-  return _dl_vdso_vsym ("__vdso_time", &linux26) ?: (void *) VSYSCALL_ADDR_vtime;
+  return _dl_vdso_vsym ("__vdso_time", &linux26) ?: &__inline_time;
 }
 __asm (".type __libc_time, %gnu_indirect_function");
 
