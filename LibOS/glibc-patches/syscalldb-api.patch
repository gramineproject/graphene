diff --git a/syscalldb.h b/syscalldb.h
new file mode 100644
index 0000000000000000000000000000000000000000..3886ca6cf4fcb64f23595551fbcf8e221846f6ae
--- /dev/null
+++ b/syscalldb.h
@@ -0,0 +1,29 @@
+#ifndef _SYSCALLDB_H_
+#define _SYSCALLDB_H_
+
+#ifdef __ASSEMBLER__
+
+.include "syscalldb_macro.S"
+
+#else /* !__ASSEMBLER__ */
+
+asm (".include \"syscalldb_macro.S\"");
+
+#define SYSCALLDB "SYSCALLDB\n"
+
+#define SHIM_SYSCALLDB_OFFSET         32
+#define SHIM_REGISTER_LIBRARY_OFFSET  40
+
+static inline int register_library(const char* name, unsigned long load_address)
+{
+    int (*shim_register_library)(const char*, unsigned long);
+    __asm__("movq %%gs:%c1, %0"
+            : "=r"(shim_register_library)
+            : "i"(SHIM_REGISTER_LIBRARY_OFFSET)
+            : "memory");
+    return shim_register_library(name, load_address);
+}
+
+#endif /* __ASSEMBLER__ */
+
+#endif /* _SYSCALLDB_H_ */
diff --git a/syscalldb_macro.S b/syscalldb_macro.S
new file mode 100644
index 0000000000000000000000000000000000000000..2463135f706b2d6c25da30d9d1814e00870b3a87
--- /dev/null
+++ b/syscalldb_macro.S
@@ -0,0 +1,7 @@
+SHIM_SYSCALLDB_OFFSET = 32
+
+.macro SYSCALLDB
+leaq .Lafter_syscalldb\@(%rip), %rcx
+jmpq *%gs:SHIM_SYSCALLDB_OFFSET
+.Lafter_syscalldb\@:
+.endm
