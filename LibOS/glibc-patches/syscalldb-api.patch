diff --git a/syscalldb.h b/syscalldb.h
new file mode 100644
index 0000000000000000000000000000000000000000..4914e280d8cd6a62ab1ea4c9aa41601763167e7d
--- /dev/null
+++ b/syscalldb.h
@@ -0,0 +1,47 @@
+#ifndef _SYSCALLDB_H_
+#define _SYSCALLDB_H_
+
+#define SHIM_SYSCALLDB_OFFSET      32
+#define SHIM_SYSCALLDB_OFFSET_STR  "32"
+
+#define SHIM_REGISTER_LIBRARY_OFFSET 40
+
+#ifdef __ASSEMBLER__
+
+# if defined(PSEUDO) && defined(SYSCALL_NAME) && defined(SYSCALL_SYMBOL)
+#  define SYSCALLDB                     \
+    subq $128, %rsp;                    \
+    .cfi_adjust_cfa_offset 128;         \
+    callq *%gs:SHIM_SYSCALLDB_OFFSET;   \
+    addq $128, %rsp;                    \
+    .cfi_adjust_cfa_offset -128
+# else
+#  define SYSCALLDB                     \
+    callq *%gs:SHIM_SYSCALLDB_OFFSET
+# endif
+
+#else /* !__ASSEMBLER__ */
+
+#define SYSCALLDB                                    \
+    "subq $128, %%rsp\n\t"                           \
+    ".cfi_adjust_cfa_offset 128\n\t"                 \
+    "callq *%%gs:" SHIM_SYSCALLDB_OFFSET_STR "\n\t"  \
+    "addq $128, %%rsp\n\t"                           \
+    ".cfi_adjust_cfa_offset -128\n\t"
+
+#define SYSCALLDB_ASM                                \
+    "callq *%gs:" SHIM_SYSCALLDB_OFFSET_STR "\n\t"
+
+static inline int register_library(const char* name, unsigned long load_address)
+{
+    int (*shim_register_library)(const char*, unsigned long);
+    __asm__("movq %%gs:%c1, %0"
+            : "=r"(shim_register_library)
+            : "i"(SHIM_REGISTER_LIBRARY_OFFSET)
+            : "memory");
+    return shim_register_library(name, load_address);
+}
+
+#endif /* Assembler */
+
+#endif /* _SYSCALLDB_H */
