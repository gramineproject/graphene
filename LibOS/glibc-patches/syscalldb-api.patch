diff --git a/shim_entry_offsets.h b/shim_entry_offsets.h
new file mode 120000
index 0000000000000000000000000000000000000000..752b85f99302ddfe1403186f1118b91560255ac2
--- /dev/null
+++ b/shim_entry_offsets.h
@@ -0,0 +1 @@
+../shim/include/shim_entry_offsets.h
\ No newline at end of file
diff --git a/syscalldb.h b/syscalldb.h
new file mode 100644
index 0000000000000000000000000000000000000000..e64b8430ac9fa136068a4ae811254a2ff0937650
--- /dev/null
+++ b/syscalldb.h
@@ -0,0 +1,42 @@
+#ifndef _SYSCALLDB_H_
+#define _SYSCALLDB_H_
+
+#ifdef __ASSEMBLER__
+
+#include "shim_entry_offsets.h"
+
+.macro SYSCALLDB
+leaq .Lafter_syscalldb\@(%rip), %rcx
+jmpq *%gs:SHIM_SYSCALLDB_OFFSET
+.Lafter_syscalldb\@:
+.endm
+
+#else /* !__ASSEMBLER__ */
+
+#include "shim_entry_offsets.h"
+
+asm (
+    ".weak syscalldb\n"
+    ".type syscalldb, @function\n"
+    ".macro SYSCALLDB\n"
+    "leaq .Lafter_syscalldb\\@(%rip), %rcx\n"
+    "jmpq *%gs:" SHIM_SYSCALLDB_OFFSET_STR "\n"
+    ".Lafter_syscalldb\\@:\n"
+    ".endm\n"
+);
+
+#define SYSCALLDB "SYSCALLDB\n"
+
+static inline int register_library(const char* name, unsigned long load_address)
+{
+    int (*shim_register_library)(const char*, unsigned long);
+    __asm__("movq %%gs:%c1, %0"
+            : "=r"(shim_register_library)
+            : "i"(SHIM_REGISTER_LIBRARY_OFFSET)
+            : "memory");
+    return shim_register_library(name, load_address);
+}
+
+#endif /* __ASSEMBLER__ */
+
+#endif /* _SYSCALLDB_H_ */
