diff --git a/libos/Makefile b/libos/Makefile
new file mode 100644
index 0000000000000000000000000000000000000000..7e0027dbcab9a9f68a8b321322abbe01dd9814ff
--- /dev/null
+++ b/libos/Makefile
@@ -0,0 +1,56 @@
+# Copyright (C) 1996-2001,2002,2003,2004,2005,2006
+#	Free Software Foundation, Inc.
+# This file is part of the GNU C Library.
+
+# The GNU C Library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+
+# The GNU C Library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+
+# You should have received a copy of the GNU Lesser General Public
+# License along with the GNU C Library; if not, write to the Free
+# Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+# 02111-1307 USA.
+
+# Makefile for the libos library.
+
+subdir		:= libos
+
+# Installed header files.
+headers		:=
+
+# Internal header files.
+distribute	:= errno.h
+
+liblibos-routines := wrapper
+
+# Build the -llibos library.
+
+extra-libs	:= liblibos
+extra-libs-others = $(extra-libs)
+
+include ../Makeconfig
+
+ifeq ($(versioning),yes)
+liblibos-routines	+=
+liblibos-shared-only-routines :=
+endif
+
+tests =
+
+modules-names =
+
+extra-test-objs += $(modules-names:=.os)
+generated := $(modules-names:=.so)
+
+include ../Rules
+
+# Depend on libc.so so a DT_NEEDED is generated in the shared objects.
+# This ensures they will load libc.so for needed symbols if loaded by
+# a statically-linked program that hasn't already loaded it.
+$(objpfx)liblibos.so: $(common-objpfx)libc.so $(common-objpfx)libc_nonshared.a
diff --git a/libos/Versions b/libos/Versions
new file mode 100644
index 0000000000000000000000000000000000000000..004c86bb085252602c198fc443d644fba0d002a3
--- /dev/null
+++ b/libos/Versions
@@ -0,0 +1,7 @@
+liblibos {
+  GLIBC_2.23 {
+    checkpoint;
+    msgpersist;
+    benchmark_rpc; send_rpc; recv_rpc;
+  }
+}
diff --git a/libos/wrapper.c b/libos/wrapper.c
new file mode 100644
index 0000000000000000000000000000000000000000..e4f4de8acdc496c2cedacbe6cf495ae4f91b6bce
--- /dev/null
+++ b/libos/wrapper.c
@@ -0,0 +1,34 @@
+#include <errno.h>
+#include <kernel-features.h>
+#include <shim_unistd.h>
+#include <sysdep.h>
+#include <sysdep-cancel.h>
+#include <sys/syscall.h>
+
+#ifdef __NR_msgpersist
+int msgpersist (int msqid, int cmd)
+{
+	return INLINE_SYSCALL (msgpersist, 2, msqid, cmd);
+}
+#endif
+
+#ifdef __NR_benchmark_rpc
+int benchmark_rpc(pid_t pid, int times, const void *buf, size_t size)
+{
+	return INLINE_SYSCALL (benchmark_rpc, 4, pid, times, buf, size);
+}
+#endif
+
+#ifdef __NR_send_rpc
+size_t send_rpc (pid_t pid, const void *buf, size_t size)
+{
+	return INLINE_SYSCALL (send_rpc, 3, pid, buf, size);
+}
+#endif
+
+#ifdef __NR_recv_rpc
+size_t recv_rpc (pid_t * pid, void *buf, size_t size)
+{
+	return INLINE_SYSCALL (recv_rpc, 3, pid, buf, size);
+}
+#endif
