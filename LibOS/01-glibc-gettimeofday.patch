--- glibc-2.19-nopatch/sysdeps/unix/sysv/linux/x86_64/gettimeofday.c	2018-11-02 15:22:03.453512619 -0700
+++ glibc-2.19/sysdeps/unix/sysv/linux/x86_64/gettimeofday.c	2018-11-06 20:52:21.003309448 -0800
@@ -17,12 +17,17 @@
 
 #include <sys/time.h>
 
-#if 0 /* In graphene, do not use vsyscall or VDSO call */
 #ifdef SHARED
 
+# include <sysdep.h>
+# include <errno.h>
 # include <dl-vdso.h>
 
-# define VSYSCALL_ADDR_vgettimeofday	0xffffffffff600000ul
+static int
+__inline_gettimeofday (struct timeval *tv, struct timezone *tz)
+{
+  return INLINE_SYSCALL (gettimeofday, 2, tv, tz);
+}
 
 void *gettimeofday_ifunc (void) __asm__ ("__gettimeofday");
 
@@ -33,7 +38,7 @@ gettimeofday_ifunc (void)
 
   /* If the vDSO is not available we fall back on the old vsyscall.  */
   return (_dl_vdso_vsym ("__vdso_gettimeofday", &linux26)
-	  ?: (void *) VSYSCALL_ADDR_vgettimeofday);
+	  ?: &__inline_gettimeofday);
 }
 asm (".type __gettimeofday, %gnu_indirect_function");
 
@@ -43,8 +48,7 @@ asm (".type __gettimeofday, %gnu_indirec
 asm (".globl __GI___gettimeofday\n"
      "__GI___gettimeofday = __gettimeofday");
 
-#endif
-#endif
+#else
 
 # include <sysdep.h>
 # include <errno.h>
@@ -56,5 +60,6 @@ __gettimeofday (struct timeval *tv, stru
 }
 libc_hidden_def (__gettimeofday)
 
+#endif
 weak_alias (__gettimeofday, gettimeofday)
 libc_hidden_weak (gettimeofday)
